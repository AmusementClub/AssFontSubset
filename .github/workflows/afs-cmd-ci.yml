name: Build afs.cmd

on:
  push:
    branches: [ "master" ]
    paths:
      - 'AssFontSubset.Core/**.cs'
      - 'AssFontSubset.Core/**.csproj'
      - 'AssFontSubset.Console/**.cs'
      - 'AssFontSubset.Console/**.csproj'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'AssFontSubset.Core/**.cs'
      - 'AssFontSubset.Core/**.csproj'
      - 'AssFontSubset.Console/**.cs'
      - 'AssFontSubset.Console/**.csproj'
  workflow_dispatch:

jobs:
  build:
    name: build-${{ matrix.target }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      identifier: ${{ matrix.target }}-${{ matrix.arch }}
    strategy:
      matrix:
        harfbuzz_ver: ['10.1.0']
        target: [win, linux-musl, osx]
        framework: ['net8.0', 'net9.0']
        arch: [x64, arm64]
        include:
          - os: windows-latest
            target: win
            framework: 'net9.0'
          - os: windows-latest
            target: linux-musl
            framework: 'net8.0' # need zig fix? https://github.com/ziglang/zig/pull/20081
          - os: macos-latest
            target: osx
            framework: 'net9.0'
        dotnet_version: ['9.x']

    steps:

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Test
      if: matrix.target != 'osx'
      run: |
        dotnet --version
        cd ./AssFontSubset.CoreTests
        dotnet restore
        dotnet test
        cd ..

    - name: Setup Zig Compiler (target linux)
      if: matrix.target == 'linux-musl'
      uses: mlugg/setup-zig@v1
      with:
        version: "master"

    - name: Add llvm-objcopy (target linux)
      if: matrix.target == 'linux-musl'
      run: |
        Invoke-WebRequest -Uri https://github.com/MIRIMIRIM/build-harfbuzz/releases/download/utils/llvm-objcopy.exe -OutFile ./AssFontSubset.Console/llvm-objcopy.exe

    - name: Change to afs.cmd and Publish
      run: |
        cd ./AssFontSubset.Console
        dotnet restore
        dotnet publish -c Release -r ${{ env.identifier }} -f ${{ matrix.framework }}

    - name: Set short version
      shell: bash
      run: |
          ver_short=`git rev-parse --short HEAD`
          echo "VERSION=$ver_short" >> $GITHUB_ENV

    - name: Upload exe files
      uses: actions/upload-artifact@v4
      with:
        name: AssFontSubset.Console_g${{ env.VERSION }}_${{ env.identifier }}
        path: |
          AssFontSubset.Console/bin/Release/${{ matrix.framework }}/${{ env.identifier }}/publish/
          !AssFontSubset.Console/bin/Release/${{ matrix.framework }}/${{ env.identifier }}/publish/*.a
          !AssFontSubset.Console/bin/Release/${{ matrix.framework }}/${{ env.identifier }}/publish/*.pdb
          !AssFontSubset.Console/bin/Release/${{ matrix.framework }}/${{ env.identifier }}/publish/*.dbg
          !AssFontSubset.Console/bin/Release/${{ matrix.framework }}/${{ env.identifier }}/publish/*.dwarf
          !AssFontSubset.Console/bin/Release/${{ matrix.framework }}/${{ env.identifier }}/publish/*.dSYM
