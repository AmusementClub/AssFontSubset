name: Build afs.cmd

on:
  workflow_run:
    workflows: ["Build hb-subset"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    name: build-${{ matrix.target }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      identifier: ${{ matrix.target }}-${{ matrix.arch }}
    strategy:
      matrix:
        harfbuzz_ver: ['10.1.0']
        target: [win, linux-musl] # macos
        arch: [x64, arm64]
        include:
          - os: windows-latest
            target: win
          - os: windows-latest
            target: linux-musl
          # - os: macos-latest
          #   target: macos
        dotnet_version: ['8.x']

    steps:

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet_version }}

    - name: Checkout
      uses: actions/checkout@v4

    # - name: Update submodule
    #   run: git submodule update --init --recursive

    - name: Test
      run: |
        dotnet --version
        cd ./AssFontSubset.CoreTests
        dotnet restore
        dotnet test
        cd ..

    - name: Setup Zig Compiler (target linux)
      if: matrix.target == 'linux-musl'
      uses: mlugg/setup-zig@v1
      with:
        version: "master"

    # - name: Download prebuilt harfbuzz libs
    #   if: matrix.env.identifier == 'win' && matrix.arch == 'x64'
    #   run: |
    #     mkdir native
    #     Invoke-WebRequest -Uri https://github.com/MIRIMIRIM/FontFlat/releases/download/harfbuzz-libs/harfbuzz_win-x64_${{ env.hb_ver }}.7z -OutFile ./native/harfbuzz_win-x64.7z
    #     cd ./native
    #     7z x harfbuzz_win-x64.7z
    #     cd ..

    - name: Use prebuilt harfbuzz subset
      uses: actions/cache/restore@v4
      with:
        path: ./HarfBuzzBinding/target
        key: hb-subset-${{ matrix.harfbuzz_ver }}-${{ env.identifier }}-static-${{ github.sha }}
        restore-keys: |
          hb-subset-${{ matrix.harfbuzz_ver }}-${{ env.identifier }}-static-
        run:
          mkdir native
          mv ./HarfBuzzBinding/target/* ./native/

    - name: Change to afs.cmd and Publish
      run: |
        cd ./AssFontSubset.Console
        dotnet restore
        dotnet publish -c Release -r "${{ env.identifier }}" /p:PublishAot=true
        cd ..

    - name: Set short version
      shell: bash
      run: |
          ver_short=`git rev-parse --short HEAD`
          echo "VERSION=$ver_short" >> $GITHUB_ENV

    - name: Upload exe files
      uses: actions/upload-artifact@v4
      with:
        name: AssFontSubset.Console_g${{ env.VERSION }}_${{ env.identifier }}
        path: |
          AssFontSubset.Console/bin/Release/net8.0/${{ env.identifier }}/publish/
          !AssFontSubset.Console/bin/Release/net8.0/${{ env.identifier }}/publish/*.pdb
          !AssFontSubset.Console/bin/Release/net8.0/${{ env.identifier }}/publish/*.dbg
          !AssFontSubset.Console/bin/Release/net8.0/${{ env.identifier }}/publish/*.dwarf
          !AssFontSubset.Console/bin/Release/net8.0/${{ env.identifier }}/publish/*.dsym