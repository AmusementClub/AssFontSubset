name: Build hb-subset

on:
  push:
    branches: [ "master" ]
    paths:
    - 'AssFontSubset.Core/**.cs'
    - 'AssFontSubset.Core/**.csproj'
    - 'AssFontSubset.Console/**.cs'
    - 'AssFontSubset.Console/**.csproj'
  pull_request:
    branches: [ "master" ]
    paths:
    - 'AssFontSubset.Core/**.cs'
    - 'AssFontSubset.Core/**.csproj'
    - 'AssFontSubset.Console/**.cs'
    - 'AssFontSubset.Console/**.csproj'
  workflow_dispatch:

jobs:
  build:
    name: build-${{ matrix.target }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        harfbuzz_ver: ['10.1.0']
        target: [win, macos, linux-musl]
        arch: [x64, arm64]
        include:
          - os: windows-latest
            target: win
          - os: windows-latest
            target: linux-musl
          - os: macos-latest
            target: macos

    steps:
    - name: Set up cache
      id: cache
      uses: actions/cache@v4
      with:
        path: ./HarfBuzzBinding/target
        key: hb-subset-static-${{ matrix.target }}-${{ matrix.arch }}-${{ github.sha }}
        restore-keys: |
          hb-subset-static-${{ matrix.target }}-${{ matrix.arch }}-

    - name: Check out code
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
    
    - name: Prepare
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install meson ninja
        cd ./HarfBuzzBinding
        git clone --recurse-submodules https://github.com/harfbuzz/harfbuzz.git -b ${{ matrix.harfbuzz_ver }} --depth=1 harfbuzz-${{ matrix.harfbuzz_ver }}

    - name: Setup msbuild (target windows x64)
      if: matrix.target == 'win' && matrix.arch == 'x64' && steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup msbuild (target windows arm64)
      if: matrix.target == 'win' && matrix.arch == 'arm64' && steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_arm64

    - name: Setup Zig Compiler (target linux)
      if: matrix.target == 'linux-musl' && steps.cache.outputs.cache-hit != 'true'
      uses: mlugg/setup-zig@v1
      with:
        version: "master"

    - name: Configure (windows-x64)
      if: matrix.target == 'win' && matrix.arch == 'x64' && steps.cache.outputs.cache-hit != 'true'
      run: |
        cd ./HarfBuzzBinding/harfbuzz-${{ matrix.harfbuzz_ver }}
        meson --native-file ../scripts/project.ini -Ddefault_library=static -Db_vscrt=static_from_buildtype build/${{ matrix.target }}-${{ matrix.arch }}-static

    - name: Configure (windows-arm64)
      if: matrix.target == 'win' && matrix.arch == 'arm64' && steps.cache.outputs.cache-hit != 'true'
      run: |
        cd ./HarfBuzzBinding/harfbuzz-${{ matrix.harfbuzz_ver }}
        meson --cross-file ../scripts/project.ini --cross-file ../scripts/${{ matrix.target }}-${{ matrix.arch }}.ini -Ddefault_library=static -Db_vscrt=static_from_buildtype build/${{ matrix.target }}-${{ matrix.arch }}-static

    - name: Configure (linux-musl)
      if: matrix.target == 'linux-musl' && steps.cache.outputs.cache-hit != 'true'
      run: |
        cd ./HarfBuzzBinding/harfbuzz-${{ matrix.harfbuzz_ver }}
        meson --native-file ../scripts/zig.ini --cross-file ../scripts/zig.ini --cross-file ../scripts/project.ini --cross-file ../scripts/${{ matrix.target }}-${{ matrix.arch }}.ini -Ddefault_library=static build/${{ matrix.target }}-${{ matrix.arch }}-static

    - name: Configure (macos-arm64)
      if: matrix.target == 'macos' && matrix.arch == 'arm64' && steps.cache.outputs.cache-hit != 'true'
      run: |
        cd ./HarfBuzzBinding/harfbuzz-${{ matrix.harfbuzz_ver }}
        meson --native-file ../scripts/project.ini -Ddefault_library=static build/${{ matrix.target }}-${{ matrix.arch }}-static
    
    - name: Configure (macos-x64)
      if: matrix.target == 'macos' && matrix.arch == 'x64' && steps.cache.outputs.cache-hit != 'true'
      run: |
        cd ./HarfBuzzBinding/harfbuzz-${{ matrix.harfbuzz_ver }}
        meson --cross-file ../scripts/project.ini --cross-file ../scripts/${{ matrix.target }}-${{ matrix.arch }}.ini -Ddefault_library=static build/${{ matrix.target }}-${{ matrix.arch }}-static
    
    - name: Build
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd ./HarfBuzzBinding/harfbuzz-${{ matrix.harfbuzz_ver }}
        meson compile -C build/${{ matrix.target }}-${{ matrix.arch }}-static
        mkdir ../target
        cp build/${{ matrix.target }}-${{ matrix.arch }}-static/src/*.a ../target/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-cache
        path: ./HarfBuzzBinding/target
